// <auto-generated />
using System;
using MagicVilla.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla.API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla.API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocupance")
                        .HasColumnType("int");

                    b.Property<int>("SquareMeter")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Muy amena",
                            Cost = 100.0,
                            CreationDate = new DateTime(2023, 8, 20, 22, 18, 8, 782, DateTimeKind.Local).AddTicks(5188),
                            Details = "Detalle de la piscina",
                            ImageUrl = "",
                            Name = "Vista a la Piscina",
                            Ocupance = 5,
                            SquareMeter = 300,
                            UpdateDate = new DateTime(2023, 8, 20, 22, 18, 8, 782, DateTimeKind.Local).AddTicks(5198)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Muy amena",
                            Cost = 400.0,
                            CreationDate = new DateTime(2023, 8, 20, 22, 18, 8, 782, DateTimeKind.Local).AddTicks(5201),
                            Details = "Detalle del mar",
                            ImageUrl = "",
                            Name = "Vista a al Mar",
                            Ocupance = 10,
                            SquareMeter = 300,
                            UpdateDate = new DateTime(2023, 8, 20, 22, 18, 8, 782, DateTimeKind.Local).AddTicks(5201)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
